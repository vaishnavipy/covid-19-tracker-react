{"version":3,"sources":["logo.png","infected.png","recovered.png","death.a91d3110.png","card.js","country.js","chartDiv.js","App.js","index.js"],"names":["Card","cname","data","d","Date","imgSrc","recovered","infected","dead","text","border","startCount","className","style","borderBottom","src","start","end","duration","useEasing","useGrouping","separator","decimal","getDay","getMonth","getDate","getFullYear","Country","selectCountry","useState","countryInput","setCountryInput","countryArr","setCountryArr","countryList","setCountryList","useEffect","fetch","then","response","json","countries","map","elm","i","value","name","onChange","event","target","ChartDiv","confirmed","deaths","country","setD","barChart","setBarChart","options","setOptions","console","log","labels","datasets","label","backgroundColor","borderColor","borderWidth","maintainAspectRatio","title","display","legend","scales","yAxes","stacked","gridLines","xAxes","Chart","Bar","update","id","App","covidData","setCovidData","setCountry","logo","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ea7fbe2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.9e5d4fc7.png\";","export default __webpack_public_path__ + \"static/media/infected.f5aacb25.png\";","export default __webpack_public_path__ + \"static/media/recovered.a14b9e9d.png\";","export default __webpack_public_path__ + \"static/media/death.a91d3110.3fb50e93.png\";","import React from \"react\"\nimport infected from \"./infected.png\"\nimport recovered from \"./recovered.png\"\nimport dead from  \"./death.a91d3110.png\"\nimport CountUp from 'react-countup';\n\nfunction Card({cname,data}){\n    const d = new Date()\n    \n    const days =[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"]\n\n    const months =[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"]\n\n    let imgSrc = cname === \"Recovered\" ? recovered : cname === \"Infected\" ? infected : dead  \n\n    let text =  cname === \"Recovered\" ? \"recoveries from\" : cname === \"Infected\" ? \"active cases of\" : \"deaths caused by\" \n\n    let border= cname === \"Recovered\" ? \"#7FFF95\" : cname === \"Infected\" ? \"#FED695\" : \"#FE8385\" \n\n   /* function numberWithCommas(x) {\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    } */\n    \n    let startCount = data < 100 ? 0 : data - 100 ;\n\n   return(\n    \n    <div className=\"card\" style={{borderBottom:`0.7em solid ${border}`}}>\n\n        <div className=\"card-img\"><img src={imgSrc} /></div>\n        <p className=\"cname\">{cname}</p>\n        <h2>\n             <CountUp\n           \n            start={startCount}\n            end={data}\n            duration={2.75}\n            useEasing={true}\n            useGrouping={true}\n            separator=\",\"\n           \n            decimal=\",\"\n            />\n        </h2>\n        <p className=\"dates\">{days[d.getDay()]} {months[d.getMonth()]} {d.getDate()} {d.getFullYear()}</p>\n        <h5>Number of {text} COVID-19</h5>\n        \n    </div>)\n}\n\nexport default Card","import React, { useEffect, useState } from \"react\"\n\nfunction Country({selectCountry}){\n\n    const [countryInput,setCountryInput] = useState(\"global\")\n\n    const [countryArr,setCountryArr] = useState(\"\");\n\n    const [countryList,setCountryList]  = useState(\"\")\n\n    useEffect(()=>{\n        fetch(\"https://covid19.mathdro.id/api/countries\")\n        .then(response=> response.json())\n        .then(data =>  setCountryArr(data.countries))\n    },[])\n\n   \n    function handleChange(event){\n        setCountryInput(event.target.value)\n        selectCountry(event.target.value)\n    }\n\n    useEffect(()=>{\n        if(countryArr){\n\n          setCountryList( countryArr.map((elm,i) =>  <option value={elm.name} key={i}>{elm.name}</option> ) )\n            \n\n        }\n    },[countryArr])\n\n    return(\n    <div className=\"select\">\n        <form>\n         <select value={countryInput}  onChange={handleChange}>\n         <option value=\"global\" >Global</option>\n            {countryList}\n\n        </select>\n        </form>\n    </div>)\n}\nexport default Country","import React, { Fragment, useEffect, useState } from \"react\"\nimport Chart from \"chart.js\"\n\n\nfunction ChartDiv({confirmed,recovered,deaths,country}) {\n\n   \n\n   \n   const [d,setD] = useState(\"\")\n\n    const [barChart,setBarChart] = useState(\"\")\n\n    const [options,setOptions] = useState(\"\") \n\n \n\n    useEffect(()=>{\n        console.log(\"mount\")\n        setD({\n            labels: [\"Infected\",\"Recovered\",\"Deaths\"],\n            datasets: [{\n           label: \"People\",\n            backgroundColor: [\"rgba(252,219,141,0.7)\",\"rgba(125,252,147,0.7)\",\"rgba(251,131,133,0.7)\"],\n            borderColor: \"none\",\n            borderWidth: 2,\n            \n            data: [0,0,0],\n            }]\n        })\n\n        setOptions({\n            maintainAspectRatio: false,\n            \n            title: {\n                display: true,\n                text: `The current state in ${country}`\n            }, \n            legend: {\n                display: false},\n            scales: {\n            yAxes: [{\n                stacked: true,\n                gridLines: {\n                display: true,\n                \n                }\n            }],\n            xAxes: [{\n                gridLines: {\n                display: false\n                }\n            }]\n            }\n        })\n\n        \n\n       \n            \n\n\n    },[])\n\n    useEffect(()=>{\n        console.log(\"d & option chnage\")\n\n        if(d && options){\n\n        setBarChart(Chart.Bar(`chart`, {\n            options: options,\n            data: d\n        }))\n    }\n        \n    },[d,options]) \n\n\n\n   \n\n   \n\n    useEffect(()=>{\n      \n\n        if(barChart && confirmed){\n            console.log(\"update barchart\")\n\n        barChart.options.title.text =  `The current state in ${country}`\n        barChart.data.datasets[0].data[0] = confirmed; // Would update the first dataset's value of 'March' to be 50\n        barChart.data.datasets[0].data[1] = recovered; \n        barChart.data.datasets[0].data[2] = deaths; \n        barChart.update()\n        }\n\n\n    },[confirmed,recovered,deaths,barChart])\n\n    \n\n  \n      \n\n\n    return( \n        <div className=\"chart-container\">\n        <canvas id=\"chart\"></canvas>\n        </div>\n        )\n   \n}\n\nexport default ChartDiv","\nimport './App.css';\nimport logo from \"./logo.png\"\nimport Card from \"./card\"\nimport { useEffect,useState } from 'react';\nimport Country from \"./country\"\nimport ChartDiv from \"./chartDiv\"\n\n\n\nfunction App() {\n  const [covidData,setCovidData] = useState(\"\")\n\n  const [country,setCountry] = useState(\"\")\n\n\n\n  useEffect(()=>{\n\n    fetch(\"https://covid19.mathdro.id/api\")\n    .then(response => response.json())\n    .then(data => setCovidData(data) )\n\n    \n  },[])\n\n  \n  function  selectCountry(data){\n\n    setCountry(data)\n\n  }\n\n  useEffect(()=>{\n    if(country){\n      if(country === \"global\"){\n        fetch(\"https://covid19.mathdro.id/api\")\n        .then(response => response.json())\n        .then(data => { setCovidData(data)})\n    \n      }else{\n\n    fetch(`https://covid19.mathdro.id/api/countries/${country}`)\n    .then(response => response.json())\n    .then(data => setCovidData(data) )\n      }\n    }\n  },[country])\n\n \n\n  return (\n      \n    <div className=\"app-container\">\n      <div className=\"logo\"><img src={logo}/></div>\n      <p>Data source from <span className=\"api\"><a href=\"https://github.com/mathdroid/covid-19-api\" target=\"_blank\">mathdroid's</a></span> api</p>\n      \n      <div className=\"card-grid\" >\n\n      {covidData &&  <Card cname=\"Infected\" data={covidData.confirmed.value} /> }\n      {covidData && <Card cname=\"Recovered\" data={covidData.recovered.value} /> }\n      {covidData && <Card cname=\"Deaths\" data={covidData.deaths.value} /> }\n      \n      </div>\n\n      {covidData && <Country selectCountry={selectCountry}/> }\n\n      {covidData && country && <ChartDiv confirmed={covidData.confirmed.value} recovered={covidData.recovered.value} deaths={covidData.deaths.value} country={country}/> }\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n\n    <App />\n,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}